# sharding-jdbc 水平分库策略配置

# 配置数据源，给数据源起别名
# 水平分库需要配置多个数据库
spring.shardingsphere.datasource.names=master,slave

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

# 配置master数据源的具体内容，包含连接池，驱动，地址，用户名，密码
spring.shardingsphere.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.url=jdbc:mysql://localhost:3306/sharding_jdbc_master?serverTimezone=GMT%2B8&useUnicode=true&amp&characterEncoding=UTF-8
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456
#spring.shardingsphere.datasource.master.url=jdbc:mysql://rm-bp119f05ug9z24073782.mysql.rds.aliyuncs.com/kids_data_report?useUnicode=true&autoReconnect=true&rewriteBatchedStatements=TRUE&zeroDateTimeBehavior=convertToNull
#spring.shardingsphere.datasource.master.username=report_dw
#spring.shardingsphere.datasource.master.password=0hTAOaph1mau8GPddjuv

# 配置slave数据源的具体内容，包含连接池，驱动，地址，用户名，密码
spring.shardingsphere.datasource.slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave.url=jdbc:mysql://localhost:3306/sharding_jdbc_slave?serverTimezone=GMT%2B8&useUnicode=true&amp&characterEncoding=UTF-8
spring.shardingsphere.datasource.slave.username=root
spring.shardingsphere.datasource.slave.password=123456
#spring.shardingsphere.datasource.slave.url=jdbc:mysql://rm-bp119f05ug9z24073782.mysql.rds.aliyuncs.com/kids_ai_lessons?useUnicode=true&autoReconnect=true&rewriteBatchedStatements=TRUE
#spring.shardingsphere.datasource.slave.username=ai_lessons_rw
#spring.shardingsphere.datasource.slave.password=7uYw2OY7mUi3xWsr

# 指定数据库分布的情况和数据表分布的情况
# master slave   course_1 course_2
spring.shardingsphere.sharding.tables.course.actual-data-nodes=db$->{1..2}.course_$->{1..2}

# 指定 course 表里面主键 cid 的生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定分库策略    约定 user_id 值偶数添加到 master 库，如果 user_id 是奇数添加到 slave 库
# 默认写法（所有的表的user_id）
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=db$->{user_id % 2 + 1}

# 指定只有course表的user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=db$->{user_id % 2 + 1}

# 指定分表策略    约定 cid 值偶数添加到 course_1 表，如果 cid 是奇数添加到 course_2 表
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}

# 打开 sql 输出日志
spring.shardingsphere.props.sql.show=true